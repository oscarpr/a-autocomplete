{"version":3,"file":"a-autocomplete.directive.js","sourceRoot":"","sources":["a-autocomplete.directive.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAEgE;AAOhE,IAAa,sBAAsB;IAS/B,gCAAoB,KAAgB;QAAhB,UAAK,GAAL,KAAK,CAAW;QAJ5B,aAAQ,GAAQ;YACpB,MAAM,EAAE,EAAE;SACb,CAAC;IAEsC,CAAC;IAGzC,yCAAQ,GAAR,cAAmB,CAAC;IAGpB,4CAAW,GAAX,UAAY,OAAsB;QAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;IACL,CAAC;IAGD,4CAAW,GAAX;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,CAAC;IAGO,qCAAI,GAAZ;QACI,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAE3D,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAGO,oDAAmB,GAA3B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;YACvE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAC1C,CAAC;IACL,CAAC;IACL,6BAAC;AAAD,CAAC,AAzCD,IAyCC;AAtCG;IADC,YAAK,EAAE;;uDACK;AAHJ,sBAAsB;IAHlC,gBAAS,CAAC;QACP,QAAQ,EAAE,kBAAkB;KAC/B,CAAC;qCAU4B,iBAAU;GAT3B,sBAAsB,CAyClC;AAzCY,wDAAsB","sourcesContent":["import { Directive, OnInit, \n    OnChanges, OnDestroy, Input, \n    ViewChild, ElementRef, SimpleChanges } from '@angular/core';\n\ndeclare var $:any;\n\n@Directive({\n    selector: '[a-autocomplete]'\n})\nexport class AAutocompleteDirective implements OnInit, OnDestroy, OnChanges {\n\n    @Input()\n    options: any;\n\n    private _options: any = {\n        source: []\n    };\n\n    constructor(private input:ElementRef) { }\n\n\n    ngOnInit(): void { }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['options']) {\n            this.init();\n        }\n    }\n\n\n    ngOnDestroy(): void {\n        this.destroyAutocomplete();\n    }\n\n\n    private init(): void {\n        this.destroyAutocomplete();\n\n        this._options = Object.assign(this._options, this.options);\n\n        $(this.input.nativeElement).autocomplete(this._options);\n    }\n\n\n    private destroyAutocomplete(): void {\n        if (this.input.nativeElement.className.includes('ui-autocomplete-input')) {\n            $(this.input).autocomplete('destroy');\n        }\n    }\n}\n"]}